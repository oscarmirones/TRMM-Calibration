library(loadeR)
library(transformeR)
library(downscaleR)
library(visualizeR)
library(convertR)
library(ncdf4)
library(climate4R.value)
library(magrittr)
library(evd)
library(formattable) #neccessary to create tables with colors
library(lubridate)
set.seed(42)
load("C:/Users/usuario/Desktop/TRMM-Calibration/Data/pp_reanalysis.RData")
load("C:/Users/usuario/Desktop/TRMM-Calibration/Data/pca.RData")
idx.tp <- which(attributes(pca$tp[[1]])$explained_variance >= .75)[1]
idx.msl <- which(attributes(pca$msl[[1]])$explained_variance >= .9)[1]
idx.diff.msl <- which(attributes(pca$diff_msl[[1]])$explained_variance >= .9)[1]
pca.matrix <- cbind(pca$tp[[1]]$PCs[,1:idx.tp],pca$msl[[1]]$PCs[,1:idx.msl],pca$diff_msl[[1]]$PCs[,1:idx.diff.msl])
k = 5
load('C:/Users/usuario/Desktop/TRMM-Calibration/Data/kmModel5.RData')
lista <- lapply(1:k, function(x) subsetDimension(pp_reanalysis, dimension = "time", indices = which(kmModel5$cluster == x)) %>% climatology())
kmedias.pp <- bindGrid(lista, dimension = "member", skip.temporal.check = TRUE)
spatialPlot(kmedias.pp,backdrop.theme = 'countries', rev.color = T, as.table = T, names.attr = paste("Days in cluster", 1:k, ":",kmModel5$size[1:k]))
MaxReturnValue <- function(data){
#library(lubridate)
#nyears <- round(time_length(difftime(cal.madrid.eqm$Dates$end[length(cal.madrid.eqm$Dates$end)], cal.madrid.eqm$Dates$start[1]),"years"))
nyears <- 20
data.maxYear <- aggregateGrid(redim(data), aggr.y = list(FUN = "max",na.rm = TRUE))
data.maxrv <- climatology(data, clim.fun = list(FUN = "mean", na.rm = T))
auxData <- data.maxYear$Data
auxData[which(is.infinite(auxData))] <- NA
if (any(!is.na(auxData))){
auxGEV <- fgev(auxData)
if ((auxGEV$estimate[3] - auxGEV$std.err[3] < 0) & (0  < auxGEV$estimate[3] + auxGEV$std.err[3])){
auxGEV <- fgev(auxData, shape = 0)
auxRV <- qgev(1-1/nyears, loc = auxGEV$estimate[1], scale = auxGEV$estimate[2], shape = 0)
}else{
auxRV <- qgev(1-1/nyears, loc = auxGEV$estimate[1], scale = auxGEV$estimate[2], shape = auxGEV$estimate[3])
}
data.maxrv <- as.numeric(auxRV)
names(data.maxrv) <- paste("RV",nyears,"_max", sep = "")
}
return(data.maxrv)
}
precip_obs <- loadStationData("C:/Users/usuario/Desktop/TRMM-Calibration/TRMM-time-series/WT_Analysis_Calibration/SP_ascii.zip", var = "precip_obs")
precip_trmm <- loadStationData("C:/Users/usuario/Desktop/TRMM-Calibration/TRMM-time-series/WT_Analysis_Calibration/SP_ascii.zip", var = "precip_trmm")
kmModel5$cluster <- kmModel5$cluster[1:8034]
i=6
station.trmm <- subsetGrid(precip_trmm, station.id = precip_trmm$Metadata$station_id[i])
station.obs <- subsetGrid(precip_obs, station.id = precip_trmm$Metadata$station_id[i])
temporalPlot(station.obs,station.trmm, xyplot.custom = list(main = paste("Precipitation in",station.trmm$Metadata$name,"(elevation",precip_trmm$Metadata$altitude[i],"m)"), ylab = "mm"))
station.obs.cl1 <- subsetDimension(station.obs, dimension = "time", indices = which(kmModel5$cluster == 1))
station.obs.cl2 <- subsetDimension(station.obs, dimension = "time", indices = which(kmModel5$cluster == 2))
station.obs.cl3 <- subsetDimension(station.obs, dimension = "time", indices = which(kmModel5$cluster == 3))
station.obs.cl4 <- subsetDimension(station.obs, dimension = "time", indices = which(kmModel5$cluster == 4))
station.obs.cl5 <- subsetDimension(station.obs, dimension = "time", indices = which(kmModel5$cluster == 5))
station.trmm.cl1 <- subsetDimension(station.trmm, dimension = "time", indices = which(kmModel5$cluster == 1))
station.trmm.cl2 <- subsetDimension(station.trmm, dimension = "time", indices = which(kmModel5$cluster == 2))
station.trmm.cl3 <- subsetDimension(station.trmm, dimension = "time", indices = which(kmModel5$cluster == 3))
station.trmm.cl4 <- subsetDimension(station.trmm, dimension = "time", indices = which(kmModel5$cluster == 4))
station.trmm.cl5 <- subsetDimension(station.trmm, dimension = "time", indices = which(kmModel5$cluster == 5))
correlation.cl1 <- c()
methods <- c("scaling", "pqm","eqm", "eqm_extrapol", "gpqm")
for (i in seq(1,length(methods))) {
if(methods[i] == "eqm_extrapol") {
pred <- biasCorrection( station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "eqm", extrapolation = "constant")
}else if(methods[i] == "scaling"){
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "scaling", scaling.type = "multiplicative")
}else if(methods[i] == "gpqm"){
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "gpqm", theta = .95)
}else{
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = methods[i])
}
correlation.cl1 <- c(correlation.cl1,cor(station.obs.cl1$Data[which(!is.na(station.obs.cl1$Data))], pred$Data[which(!is.na(station.obs.cl1$Data))], method = "spearman", use = "everything"))
}
correlation.cl1
pred$Data
pred$Data[which(!is.na(station.obs.cl1$Data))]
temporalPlot(pred)
temporalPlot(station.obs.cl1,pred)
temporalPlot(station.obs.cl1[which(!is.na(station.obs.cl1$Data))],pred)
temporalPlot(station.obs.cl1,pred)
station.obs.cl1
subsetDimension(station.obs.cl1,indices = which(!is.na(station.obs.cl1$Data)))
subsetDimension(station.obs.cl1,indices = which(is.na(station.obs.cl1$Data)))
subsetDimension(station.obs.cl1,indices = which(!is.na(station.obs.cl1$Data)))
which(!is.na(station.obs.cl1$Data))
subsetDimension(station.obs.cl1,indices = which(!is.na(station.obs.cl1$Data)))
subsetDimension(station.obs.cl1, indices = [1,2,3])
subsetDimension(station.obs.cl1, indices = (1,2,3)
subsetDimension(station.obs.cl1, indices = (1,2,3))
help("subsetDimension")
str(which(!is.na(station.obs.cl1$Data)))
str(which(kmModel5$cluster == 1))
subsetDimension(station.obs,indices = which(!is.na(station.obs.cl1$Data)))
subsetDimension(station.obs,indices = which(!is.na(station.obs$Data)))
subsetDimension(station.obs.cl1,indices = which(!is.na(station.obs.cl1$Data)))
subsetDimension(station.obs.cl1$Data,indices = which(!is.na(station.obs.cl1$Data)))
subsetDimension(station.obs.cl1,indices = which(!is.na(station.obs.cl1$Data)))
station.obs.cl1
which(!is.na(station.obs.cl1$Data)))
which(!is.na(station.obs.cl1$Data))
length(which(!is.na(station.obs.cl1$Data))))
length(which(!is.na(station.obs.cl1$Data)))
length(which(!is.na(station.obs.cl1$Data)))
which(!is.na(station.obs.cl1$Data))
which(!is.na(station.obs.cl1$Data))[1459]
which(!is.na(station.obs.cl1$Data))[1460]
station.obs.cl1$Data[1459]
station.obs.cl1$Dates$start[1459]
station.obs.cl1$Dates$start[1460]
station.obs.cl1$Dates$start[1459]
station.obs.cl1$Dates$end[1459]
help("subsetDimension")
subsetDimension(station.obs.cl1,dimension = "time", indices = which(!is.na(station.obs.cl1$Data)))
length(station.obs.cl1$Data)
length(pred$Data)
correlation.cl1 <- c()
methods <- c("scaling", "pqm","eqm", "eqm_extrapol", "gpqm")
station.obs.cl1 <- subsetDimension(station.obs.cl1,dimension = "time", indices = which(!is.na(station.obs.cl1$Data)))
station.trmm.cl1 <- subsetDimension(station.trmm.cl1,dimension = "time", indices = which(!is.na(station.obs.cl1$Data)))
for (i in seq(1,length(methods))) {
if(methods[i] == "eqm_extrapol") {
pred <- biasCorrection( station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "eqm", extrapolation = "constant")
}else if(methods[i] == "scaling"){
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "scaling", scaling.type = "multiplicative")
}else if(methods[i] == "gpqm"){
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "gpqm", theta = .95)
}else{
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = methods[i])
}
correlation.cl1 <- c(correlation.cl1,cor(station.obs.cl1$Data[which(!is.na(station.obs.cl1$Data))], pred$Data[which(!is.na(station.obs.cl1$Data))], method = "spearman", use = "everything"))
}
correlation.cl1 <- c()
methods <- c("scaling", "pqm","eqm", "eqm_extrapol", "gpqm")
station.obs.cl1 <- subsetDimension(station.obs.cl1,dimension = "time", indices = which(!is.na(station.obs.cl1$Data)))
station.trmm.cl1 <- subsetDimension(station.trmm.cl1,dimension = "time", indices = which(!is.na(station.obs.cl1$Data)))
for (i in seq(1,length(methods))) {
if(methods[i] == "eqm_extrapol") {
pred <- biasCorrection( station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "eqm", extrapolation = "constant")
}else if(methods[i] == "scaling"){
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "scaling", scaling.type = "multiplicative")
}else if(methods[i] == "gpqm"){
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = "gpqm", theta = .95)
}else{
pred <- biasCorrection(station.obs.cl1, station.trmm.cl1, precipitation = TRUE, method = methods[i])
}
correlation.cl1 <- c(correlation.cl1,cor(station.obs.cl1$Data, pred$Data, method = "spearman", use = "everything"))
}
length(station.obs.cl1$Data)
length(pred$Data)
pred
length(pred)
length(pred$Data)
which(!is.na(pred$Data))
length(which(is.na(pred$Data)))
8033-6124
length(correlation.cl1$Data)
length(station.obs.cl1$Data)
